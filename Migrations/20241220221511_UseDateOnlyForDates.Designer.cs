// <auto-generated />
using System;
using ClientManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClientManagementAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241220221511_UseDateOnlyForDates")]
    partial class UseDateOnlyForDates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClientManagementAPI.Models.Client", b =>
                {
                    b.Property<long>("INN")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateOnly>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("INN");

                    b.HasIndex("INN")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("ClientManagementAPI.Models.Founder", b =>
                {
                    b.Property<long>("INN")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientINN")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateOnly>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("INN");

                    b.HasIndex("ClientINN");

                    b.HasIndex("INN")
                        .IsUnique();

                    b.ToTable("Founders");
                });

            modelBuilder.Entity("ClientManagementAPI.Models.Founder", b =>
                {
                    b.HasOne("ClientManagementAPI.Models.Client", "Client")
                        .WithMany("Founders")
                        .HasForeignKey("ClientINN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ClientManagementAPI.Models.Client", b =>
                {
                    b.Navigation("Founders");
                });
#pragma warning restore 612, 618
        }
    }
}
